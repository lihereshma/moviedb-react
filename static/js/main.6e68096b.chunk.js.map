{"version":3,"sources":["components/Navbar.js","components/Searchbar.js","components/Movie.js","components/MoviesList.js","components/Pagination.js","components/MovieInfo.js","components/LoadingSpinner.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","Searchbar","props","action","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","Movie","alt","altImage","src","image","onClick","viewMovieInfo","movieId","MoviesList","movies","map","movie","i","key","id","poster_path","title","Pagination","pageLinks","leftSide","currentPage","rightSide","pages","active","push","focusPage","MovieInfo","currentMovie","genreNames","genres","forEach","genre","name","genreString","length","langNames","spoken_languages","lang","langString","join","productionCompanies","production_companies","company","companyString","productionCountries","production_countries","country","countries","closeMovieInfo","runtime","minutes","hours","Math","floor","formatRuntime","date","dateArray","split","reverse","day","month","parseInt","year","formatDate","release_date","ceil","vote_average","revenue","budget","tagline","overview","LoadingSpinner","App","e","setState","searchInput","target","value","loading","fetch","apiKey","state","then","data","json","results","totalResults","total_results","total_pages","alert","preventDefault","pageNumber","process","totalPages","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e68096b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <a href=\"index.html\" className=\"navbar-brand\">\r\n        <h1>Movie Finder</h1>\r\n      </a>      \r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction Searchbar(props) {\r\n  return (\r\n    <div>\r\n      <form className=\"row justify-content-center\" action=\"index.html\" onSubmit={ props.handleSubmit }>\r\n        <div className=\"form-input col-lg-4 col-11\">\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Search here by title...\" onChange={ props.handleChange }/>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n","import React from 'react';\r\n\r\nfunction Movie(props) {\r\n  return (\r\n    <div className=\"col-lg-3 col-md-6 col-sm-12 col-12 mb-4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          { \r\n            <img\r\n            alt={props.altImage}\r\n            src={props.image == null ? 'https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg' :`http://image.tmdb.org/t/p/w185${props.image}`}\r\n            />\r\n          }\r\n          <div className=\"card-content link\">\r\n            <a href=\"#FIXME\" onClick={() => props.viewMovieInfo(props.movieId)}>view details</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react';\r\nimport Movie from './Movie'\r\n\r\nfunction MoviesList(props) {\r\n  return ( \r\n    <div className=\"container-fluid\">    \r\n      <div className=\"row\">   \r\n          {\r\n            props.movies.map((movie, i) => {\r\n              return (\r\n                <Movie key={i} viewMovieInfo={props.viewMovieInfo} movieId={movie.id} image={movie.poster_path} altImage={movie.title} />                    \r\n              )\r\n            })\r\n          }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesList;\r\n","import React from 'react'\r\n\r\nfunction Pagination(props) {\r\n  const pageLinks = []\r\n  let leftSide = props.currentPage - 2;\r\n  if(leftSide <= 0 ) leftSide=1;\r\n  let rightSide = props.currentPage + 2;\r\n  if(rightSide>props.pages) rightSide = props.pages;\r\n\r\n  for (let i = leftSide; i <= rightSide; i++) {\r\n    let active = props.currentPage === i ? 'active' : '';\r\n    pageLinks.push(<li className={`page-number ${active}`} key={i} onClick={() => props.focusPage(i)}><a href=\"#FIXME\">{i}</a></li>)    \r\n  }\r\n  return(\r\n    <div>\r\n      <ul className=\"pagination\">\r\n      { props.currentPage !== 1 ? <li onClick={() => props.focusPage(1) }><a href=\"#FIXME\" className=\"button first\">First</a></li> : ''}\r\n      { props.currentPage > 1 ? <li onClick={() => props.focusPage(props.currentPage - 1)}><a href=\"#FIXME\" className=\"arrows prev\">Prev</a></li> : ''}\r\n      {  pageLinks }\r\n      { props.currentPage < props.pages ? <li onClick={() => props.focusPage(props.currentPage + 1)}><a href=\"#FIXME\" className=\"arrows next\">Next</a></li> : ''} \r\n      { props.currentPage !== props.pages ? <li onClick={() => props.focusPage(props.pages) }><a href=\"#FIXME\" className=\"button last\">Last</a></li> : ''}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\n\r\nfunction MovieInfo(props) {\r\n  const currentMovie = props.currentMovie;\r\n\r\n  const genreNames = [];\r\n  if (currentMovie.genres) {\r\n    currentMovie.genres.forEach(function(genre) {\r\n      genreNames.push(genre.name);\r\n    });\r\n  }\r\n  const genreString = [];\r\n  for (let i = 0; i < genreNames.length; i++) {\r\n    genreString.push(<li className=\"status\">{genreNames[i]}</li>);  \r\n  }\r\n\r\n  const langNames = [];\r\n  if (currentMovie.spoken_languages) {\r\n    currentMovie.spoken_languages.forEach(function(lang) {\r\n      langNames.push(lang.name);\r\n    });\r\n  }\r\n  let langString = langNames.join(\", \");\r\n\r\n  const productionCompanies = [];\r\n  if(currentMovie.production_companies){\r\n    currentMovie.production_companies.forEach(function(company){\r\n      productionCompanies.push(company.name);\r\n    }); \r\n  }\r\n  let companyString = productionCompanies.join(', ');\r\n\r\n  const productionCountries = [];\r\n  if(currentMovie.production_countries){\r\n    currentMovie.production_countries.forEach(function(country){\r\n      productionCountries.push(country.name);\r\n    }); \r\n  }\r\n  let countries = productionCountries.join(', ');\r\n\r\n  function formatRuntime(runtime) {\r\n    const minutes = runtime % 60;\r\n    const hours = Math.floor(runtime / 60);\r\n    return (`${hours} ${hours>1?'hours':'hour'} ${minutes} minutes`);\r\n  }\r\n\r\n\r\n  function formatDate(date) {\r\n    const dateArray = date.split('-').reverse();\r\n    const day = dateArray[0];\r\n    let month ='';\r\n    switch(parseInt(dateArray[1])){\r\n      case 1: month = 'Jan'; break;\r\n      case 2: month = 'Feb'; break;\r\n      case 3: month = 'Mar'; break;\r\n      case 4: month = 'Apr'; break;\r\n      case 5: month = 'May'; break;\r\n      case 6: month = 'Jun'; break;\r\n      case 7: month = 'Jul'; break;\r\n      case 8: month = 'Aug'; break;\r\n      case 9: month = 'Sep'; break;\r\n      case 10: month = 'Oct'; break;\r\n      case 11: month = 'Nov'; break;\r\n      case 12: month = 'Dec'; break;\r\n      default: month = '';\r\n    }\r\n    const year = dateArray[2];\r\n    return `${day} ${month} ${year}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\" onClick={props.closeMovieInfo}>\r\n        <div className=\"col-11\">\r\n          <a className=\"backArrow\" href=\"#FIXME\">go back</a>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-5 justify-content-center\">\r\n        <div className=\"col-lg-4 col-md-6 col-sm-12 col-11 mr-lg-5 mb-5 poster\">\r\n          <figure>\r\n          <img\r\n            alt={currentMovie.title}\r\n            src={currentMovie.poster_path == null ? 'https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg' :`http://image.tmdb.org/t/p/w185${currentMovie.poster_path}`}\r\n          />\r\n          </figure>           \r\n        </div>\r\n        <div className=\"col-lg-7 col-11 details\">\r\n          <ul>\r\n            <li className=\"title\">\r\n              <span>{currentMovie.title}</span>\r\n            </li>\r\n            <li className=\"time\">\r\n              <p>\r\n              {formatRuntime(currentMovie.runtime)} <span>&#124;</span> {formatDate(currentMovie.release_date)}\r\n            </p>\r\n            </li>\r\n            <li>\r\n              <ul className=\"genres\">{genreString}</ul>\r\n            </li>\r\n            <li>\r\n              <ul className=\"row vote\">\r\n                <li className=\"col-lg-4 col-sm-12 mb-4\">\r\n                  <h3>Language</h3>\r\n                  <span>{langString}</span>\r\n                </li>                \r\n                <li className=\"col-lg-3 col-sm-12 mb-4\">\r\n                  <h3>Rating</h3>\r\n                  <span>{Math.ceil(currentMovie.vote_average)} &#47; 10</span>\r\n                </li>\r\n                <li className=\"col-lg-5 col-sm-12\">\r\n                  <h3>Box Office</h3>\r\n                  <div>\r\n                    <h4>Revenue:</h4><span>${currentMovie.revenue}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h4>Budget:</h4><span>${currentMovie.budget}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>  \r\n            </li>\r\n            <li>\r\n              <h3>{currentMovie.tagline}</h3>\r\n              <p>{currentMovie.overview}</p>\r\n            </li>\r\n            <li>\r\n              <h3>Company Credits</h3>\r\n              <p>{companyString}</p>\r\n            </li>\r\n            <li>\r\n              <h3>Countries</h3>\r\n              <p>{countries}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo\r\n","import React from 'react';\r\n\r\nconst LoadingSpinner = () => (\r\n  <div>\r\n    <div className=\"page-loader\">\r\n      <div className=\"spinner\">\r\n        <div className=\"loader-outter\"></div>\r\n        <div className=\"loader-inner\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingSpinner;","import React, { Component } from 'react'\nimport '../App.css'\nimport Navbar from './Navbar'\nimport Searchbar from './Searchbar'\nimport MoviesList from './MoviesList'\nimport Pagination from './Pagination'\nimport MovieInfo from './MovieInfo'\nimport LoadingSpinner from './LoadingSpinner'\n\nclass App extends Component {\n  constructor() {\n    super()\n  \n    this.state = {\n      movies: [],\n      searchInput: '',\n      totalResults: 0,\n      currentPage: 1,\n      currentMovie: null,\n      loading: false\n    }\n    this.apiKey = process.env.REACT_APP_API\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchInput: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    this.setState({ loading: true}, () => {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchInput}&language=en-US`)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({ loading: false, movies: [...data.results], totalResults: data.total_results })\n        if( data.total_pages === 0) {\n          alert('Sorry result not found')\n        }\n      })\n    }) \n    \n    e.preventDefault()\n  }\n\n  focusPage = (pageNumber) => {\n    this.setState({ loading: true}, () => {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchInput}&page=${pageNumber}&language=en-US`)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({ loading: false, movies: [...data.results], totalResults: data.total_results, currentPage: pageNumber })\n      })\n    })\n  }\n\n  viewMovieInfo = (id) => {\n    this.setState({ loading: true}, () => {\n      this.state.movies.forEach((movie, i) => {\n        if(movie.id === id) {\n          fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${this.apiKey}`)\n          .then(data => data.json())\n          .then(data => {\n            this.setState({ loading: false, currentMovie: data })\n          })\n        }\n      })\n    }) \n  }\n\n  closeMovieInfo = () => {\n    this.setState({ currentMovie: null })\n  }\n\n  render() {\n    let totalPages = Math.ceil(this.state.totalResults / 20);\n    return (      \n      <div>\n        <header>\n          <div className=\"container\">\n            <Navbar />\n          </div>\n        </header>\n        {this.state.currentMovie == null ?\n        <section className=\"result\">\n          <div className=\"container\">\n            <Searchbar handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\n            { this.state.loading ? \n              <LoadingSpinner /> :\n              <div className=\"output\">\n                <MoviesList viewMovieInfo={this.viewMovieInfo} movies={this.state.movies}/> \n                <div className=\"pag\">\n                  {this.state.totalResults > 20 && this.state.currentMovie == null ? <Pagination pages={totalPages} focusPage={this.focusPage} currentPage={this.state.currentPage}/> : ''}\n                </div>\n              </div>\n            }\n          </div>\n        </section>\n        : \n        <section className=\"info\">\n          { this.state.loading ? \n            <LoadingSpinner /> :\n            <MovieInfo closeMovieInfo={this.closeMovieInfo} currentMovie={this.state.currentMovie} />\n          }\n        </section>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}